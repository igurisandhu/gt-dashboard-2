{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","constants/patterns.ts","components/profile/profileCard/profileFormNav/nav/PersonalInfo/FirstNameItem/FirstNameItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem.tsx","components/common/inputs/SuffixInput/SuffixInput.styles.ts","components/common/inputs/SuffixInput/SuffixInput.tsx","../node_modules/@ant-design/icons-svg/es/asn/FileTextOutlined.js","../node_modules/@ant-design/icons/es/icons/FileTextOutlined.js","components/common/inputs/OpenURLInput/OpenURLInput.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/WebsiteItem/WebsiteItem.tsx","components/profile/profileCard/profileFormNav/nav/PersonalInfo/PersonalInfo.tsx","pages/PersonalInfoPage.tsx"],"names":["BaseButtonsForm","_ref","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","formDefault","BaseForm","useForm","currentForm","_jsxs","_jsx","BaseButtonsGroup","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","className","t","useTranslation","BaseRow","gutter","wrap","BaseCol","span","BaseButton","block","type","onClick","htmlType","passwordPattern","RegExp","websitePattern","FirstNameItem","name","label","BaseInput","PhoneItem","required","verified","$isSuccess","$successText","rules","message","disabled","EmailItem","Suffix","styled","div","_templateObject","_taggedTemplateLiteral","isOpen","SuffixInput","suffix","isOpenSuffix","S","FileTextOutlined","ref","React","AntdIcon","_objectSpread","icon","FileTextOutlinedSvg","RefIcon","OpenURLInput","href","target","isMatch","useMemo","test","BaseTooltip","title","size","scheme","WebsiteItem","shouldUpdate","getFieldValue","website","pattern","concat","addonBefore","initialPersonalInfoValues","firstName","lastName","nickName","sex","undefined","birthday","language","phone","email","country","city","address1","address2","zipcode","twitter","linkedin","facebook","PersonalInfo","user","useAppSelector","state","useState","isLoading","setLoading","userFormValues","onFinish","useCallback","values","setTimeout","notificationController","success","console","log","BaseCard","initialValues","onFieldsChange","xs","md","xl","PersonalInfoPage","_Fragment","PageTitle"],"mappings":"0HAAA,8FAcO,MAAMA,EAA2DC,IAQjE,IARkE,KACvEC,EAAI,gBACJC,EAAe,iBACfC,EAAgB,OAChBC,EAAM,QACNC,GAAU,EAAK,SACfC,KACGC,GACJP,EACC,MAAOQ,GAAeC,IAASC,UACzBC,EAAcV,GAAQO,EAO5B,OACEI,eAACH,IAAQ,CAACR,KAAMU,KAAiBJ,EAAKD,SAAA,CACnCA,EACAJ,IAAoBE,GAAUS,cAACC,IAAgB,CAACT,QAASA,EAASU,SARtDA,KACJ,OAAXJ,QAAW,IAAXA,KAAaK,cACbb,GAAoBA,GAAiB,EAAM,OAOhC,EAIfJ,EAAgBkB,MAAQC,IACxBnB,EAAgBoB,KAAOC,IACvBrB,EAAgBsB,KAAOC,IACvBvB,EAAgBW,QAAUD,IAASC,QACnCX,EAAgBwB,SAAWd,IAASc,Q,mCC3CpC,mFAYO,MAAMT,EAAoDd,IAAiD,IAAhD,UAAEwB,EAAS,SAAET,EAAQ,QAAEV,KAAYE,GAAOP,EAC1G,MAAM,EAAEyB,GAAMC,cAEd,OACEd,eAACe,IAAO,CAACH,UAAWA,EAAWI,OAAQ,CAAC,GAAI,IAAKC,MAAM,EAAMvB,SAAA,CAC3DO,cAACiB,IAAO,CAACC,KAAM,GAAGzB,SAChBO,cAACmB,IAAU,CAACC,OAAK,EAACC,KAAK,QAAQC,QAASpB,KAAcR,EAAKD,SACxDmB,EAAE,qBAGPZ,cAACiB,IAAO,CAACC,KAAM,GAAGzB,SAChBO,cAACmB,IAAU,CAACC,OAAK,EAACC,KAAK,UAAU7B,QAASA,EAAS+B,SAAS,YAAa7B,EAAKD,SAC3EmB,EAAE,qBAGC,C,mCC3Bd,oEAAO,MAAMY,EAAkB,IAAIC,OAAO,kDAE7BC,EAAiB,oF,gGCGvB,MAAMC,EAA0BA,KACrC,MAAM,EAAEf,GAAMC,cAEd,OACEb,cAACd,IAAgBoB,KAAI,CAACsB,KAAK,OAAOC,MAAOjB,EAAE,eAAenB,SACxDO,cAAC8B,IAAS,KACW,ECAdC,EAAsC5C,IAAgD,IAA/C,SAAE6C,EAAQ,QAAEV,EAAO,SAAEW,KAAavC,GAAOP,EAC3F,MAAM,EAAEyB,GAAMC,cAEd,OACEb,cAACd,IAAgBoB,KAAI,CACnBsB,KAAK,QACLM,WAAYD,EACZE,aAAcvB,EAAE,qCAChBiB,MAAOjB,EAAE,gBACTwB,MAAO,CACL,CAAEJ,WAAUK,QAASzB,EAAE,yBACvB,CACES,KAAM,SACNgB,QAASzB,EAAE,0BAGXlB,EAAKD,SAETO,cAAC8B,IAAS,CAACQ,SAAUL,EAAUX,QAASA,KACnB,ECnBdiB,EAAsCpD,IAAgD,IAA/C,SAAE6C,EAAQ,QAAEV,EAAO,SAAEW,KAAavC,GAAOP,EAC3F,MAAM,EAAEyB,GAAMC,cAEd,OACEb,cAACd,IAAgBoB,KAAI,CACnBsB,KAAK,QACLM,WAAYD,EACZE,aAAcvB,EAAE,qCAChBiB,MAAOjB,EAAE,gBACTwB,MAAO,CACL,CAAEJ,WAAUK,QAASzB,EAAE,yBACvB,CACES,KAAM,QACNgB,QAASzB,EAAE,6BAGXlB,EAAKD,SAETO,cAAC8B,IAAS,CAACQ,SAAUL,EAAUX,QAASA,KACnB,E,aCxBpB,MAAMkB,E,MAASC,EAAOC,IAAGC,MAAAC,YAAA,yFAK3BlD,IAAWA,EAAMmD,QAAU,mCCFnBC,EAA0C3D,IAAA,IAAC,OAAE4D,EAAM,aAAEC,GAAe,KAAStD,GAAOP,EAAA,OAC/Fa,cAAC8B,IAAS,CAACiB,OAAQ/C,cAACiD,EAAQ,CAACJ,OAAQG,EAAavD,SAAEsD,OAAwBrD,GAAS,E,WCRxEwD,EADQ,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,kaAAsa,KAAQ,YAAa,MAAS,Y,QCK9lBA,EAAmB,SAA0BxD,EAAOyD,GACtD,OAAoBC,gBAAoBC,IAAUC,YAAcA,YAAc,CAAC,EAAG5D,GAAQ,CAAC,EAAG,CAC5FyD,IAAKA,EACLI,KAAMC,IAEV,EAKeC,MAJYL,aAAiBF,G,yBCErC,MAAMQ,EAA4CvE,IAA4C,IAA3C,KAAEwE,EAAI,OAAEC,EAAS,YAAalE,GAAOP,EAC7F,MAAM,EAAEyB,GAAMC,cAERgD,EAAUC,mBAAQ,IAAM,IAAIrC,OAAOC,KAAgBqC,KAAKJ,GAAQ,MAAM,CAACA,IAE7E,OACE3D,cAAC8C,EAAW,CACVC,OACE/C,cAACgE,IAAW,CAACC,MAAOrD,EAAE,uBAAuBnB,SAC3CO,cAACmB,IAAU,CACT+C,KAAK,QACLP,KAAMA,EACNC,OAAQA,EACRtB,UAAWuB,EACXxC,KAAK,OACLkC,KAAMvD,cAACkD,EAAgB,WAIzBxD,GACJ,EC5BAyE,EAAS,WAMFC,EAA0CA,KACrD,MAAM,EAAExD,GAAMC,cAEd,OACEb,cAACd,IAAgBoB,KAAI,CAAC+D,cAAY,EAAA5E,SAC/BN,IAAwB,IAAvB,cAAEmF,GAAenF,EACjB,MAAMoF,EAAUD,EAAc,WAE9B,OACEtE,cAACd,IAAgBoB,KAAI,CACnBsB,KAAK,UACLC,MAAOjB,EAAE,oCACTwB,MAAO,CACL,CACEoC,QAAS9C,IACTW,QAASzB,EAAE,8CAEbnB,SAEFO,cAAC0D,EAAY,CAACC,KAAI,GAAAc,OAAKN,GAAMM,OAAGF,GAAWX,OAAO,SAASc,YAAaP,KACnD,GAGN,E,oCCU3B,MAAMQ,EAAoD,CACxDC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,SAAKC,EACLC,cAAUD,EACVE,cAAUF,EACVG,MAAO,GACPC,MAAO,GACPC,aAASL,EACTM,UAAMN,EACNO,SAAU,GACVC,SAAU,GACVC,QAAS,GACTlB,QAAS,GACTmB,QAAS,GACTC,SAAU,GACVC,SAAU,IAGCC,EAAyBA,KACpC,MAAMC,EAAOC,aAAgBC,GAAUA,EAAMF,KAAKA,QAE3CzG,EAAiBC,GAAoB2G,oBAAS,IAC9CC,EAAWC,GAAcF,oBAAS,GAEnCG,EAAiBtC,mBACrB,IACEgC,EACI,CACElE,KAAMkE,EAAKlE,KAEXwD,MAAOU,EAAKV,MACZD,MAAOW,EAAKX,MAUZZ,QAAa,OAAJuB,QAAI,IAAJA,OAAI,EAAJA,EAAMvB,SAKjBI,GACN,CAACmB,KAGI1G,GAAQF,IAAgBW,WAEzB,EAAEe,GAAMC,cAERwF,EAAWC,uBACdC,IAECJ,GAAW,GACXK,YAAW,KACTL,GAAW,GACX7G,GAAiB,GACjBmH,IAAuBC,QAAQ,CAAErE,QAASzB,EAAE,oBAC5C+F,QAAQC,IAAIL,EAAO,GAClB,IAAK,GAEV,CAAC3F,IAGH,OACEZ,cAAC6G,IAAQ,CAAApH,SACPO,cAACd,IAAe,CACdE,KAAMA,EACNwC,KAAK,OACLpC,QAAS0G,EACTY,cAAeV,EACf/G,gBAAiBA,EACjBC,iBAAkBA,EAClByH,eAAgBA,IAAMzH,GAAiB,GACvC+G,SAAUA,EAAS5G,SAEnBM,eAACe,IAAO,CAACC,OAAQ,CAAEiG,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAAKzH,SAAA,CAC1CO,cAACiB,IAAO,CAACC,KAAM,GAAGzB,SAChBO,cAACd,IAAgBoB,KAAI,CAAAb,SACnBO,cAACd,IAAgBkB,MAAK,CAAAX,SAAEmB,EAAE,wCAI9BZ,cAACiB,IAAO,CAAC+F,GAAI,GAAIC,GAAI,GAAGxH,SACtBO,cAAC2B,EAAa,MA6BhB3B,cAACiB,IAAO,CAAC+F,GAAI,GAAIC,GAAI,GAAGxH,SACtBO,cAAC+B,EAAS,CAACE,WAAc,OAAJ6D,QAAI,IAAJA,MAAMX,WAG7BnF,cAACiB,IAAO,CAAC+F,GAAI,GAAIC,GAAI,GAAGxH,SACtBO,cAACuC,EAAS,CAACN,WAAc,OAAJ6D,QAAI,IAAJA,MAAMV,WAmC7BpF,cAACiB,IAAO,CAAC+F,GAAI,GAAIC,GAAI,GAAGxH,SACtBO,cAACoE,EAAW,YAQT,E,YCrMA+C,UAXoBA,KACjC,MAAM,EAAEvG,GAAMC,cAEd,OACEd,eAAAqH,WAAA,CAAA3H,SAAA,CACEO,cAACqH,IAAS,CAAA5H,SAAEmB,EAAE,oCACdZ,cAAC6F,EAAY,MACZ,C","file":"static/js/4.fde0a568.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React from 'react';\nimport { BaseButton, BaseButtonProps } from '@app/components/common/BaseButton/BaseButton';\nimport { useTranslation } from 'react-i18next';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\ninterface BaseButtonsGroupProps extends BaseButtonProps {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseRow className={className} gutter={[10, 10]} wrap={false}>\n      <BaseCol span={12}>\n        <BaseButton block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </BaseButton>\n      </BaseCol>\n      <BaseCol span={12}>\n        <BaseButton block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </BaseButton>\n      </BaseCol>\n    </BaseRow>\n  );\n};\n","export const passwordPattern = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/);\n\nexport const websitePattern = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?/gi;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\n\nexport const FirstNameItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item name=\"name\" label={t('common.name')}>\n      <BaseInput />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseFormItemProps } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\n\ninterface PhoneItemProps extends BaseFormItemProps {\n  verified?: boolean;\n  onClick?: () => void;\n}\n\nexport const PhoneItem: React.FC<PhoneItemProps> = ({ required, onClick, verified, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"phone\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.phone')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        {\n          type: 'number',\n          message: t('common.phoneError'),\n        },\n      ]}\n      {...props}\n    >\n      <BaseInput disabled={verified} onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseFormItemProps } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\n\ninterface EmailItemProps extends BaseFormItemProps {\n  verified?: boolean;\n  onClick?: () => void;\n}\n\nexport const EmailItem: React.FC<EmailItemProps> = ({ required, onClick, verified, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"email\"\n      $isSuccess={verified}\n      $successText={t('profile.nav.personalInfo.verified')}\n      label={t('common.email')}\n      rules={[\n        { required, message: t('common.requiredField') },\n        {\n          type: 'email',\n          message: t('common.notValidEmail'),\n        },\n      ]}\n      {...props}\n    >\n      <BaseInput disabled={verified} onClick={onClick} />\n    </BaseButtonsForm.Item>\n  );\n};\n","import styled from 'styled-components';\n\ninterface SuffixProps {\n  isOpen: boolean;\n}\n\nexport const Suffix = styled.div<SuffixProps>`\n  transition: all 0.5s ease;\n  visibility: visible;\n  opacity: 1;\n\n  ${(props) => !props.isOpen && 'opacity: 0; visibility: hidden'};\n`;\n","import React from 'react';\nimport { BaseInput, BaseInputProps } from '../BaseInput/BaseInput';\nimport * as S from './SuffixInput.styles';\n\nexport interface SuffixInputProps extends BaseInputProps {\n  suffix: React.ReactNode;\n  isOpenSuffix?: boolean;\n}\n\nexport const SuffixInput: React.FC<SuffixInputProps> = ({ suffix, isOpenSuffix = true, ...props }) => (\n  <BaseInput suffix={<S.Suffix isOpen={isOpenSuffix}>{suffix}</S.Suffix>} {...props} />\n);\n","// This icon file is generated automatically.\nvar FileTextOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 288.6L639.4 73.4c-6-6-14.1-9.4-22.6-9.4H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V311.3c0-8.5-3.4-16.7-9.4-22.7zM790.2 326H602V137.8L790.2 326zm1.8 562H232V136h302v216a42 42 0 0042 42h216v494zM504 618H320c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM312 490v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H320c-4.4 0-8 3.6-8 8z\" } }] }, \"name\": \"file-text\", \"theme\": \"outlined\" };\nexport default FileTextOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FileTextOutlinedSvg from \"@ant-design/icons-svg/es/asn/FileTextOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar FileTextOutlined = function FileTextOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FileTextOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(FileTextOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'FileTextOutlined';\n}\nexport default RefIcon;","import React, { useMemo } from 'react';\nimport { SuffixInput } from '../SuffixInput/SuffixInput';\nimport { useTranslation } from 'react-i18next';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport { BaseInputProps } from '../BaseInput/BaseInput';\nimport { websitePattern } from 'constants/patterns';\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { BaseTooltip } from '../../BaseTooltip/BaseTooltip';\n\ninterface OpenURLInputProps extends BaseInputProps {\n  href?: string;\n  target?: string;\n}\n\nexport const OpenURLInput: React.FC<OpenURLInputProps> = ({ href, target = '_blank', ...props }) => {\n  const { t } = useTranslation();\n\n  const isMatch = useMemo(() => new RegExp(websitePattern).test(href || ' '), [href]);\n\n  return (\n    <SuffixInput\n      suffix={\n        <BaseTooltip title={t('common.openInNewTab')}>\n          <BaseButton\n            size=\"small\"\n            href={href}\n            target={target}\n            disabled={!isMatch}\n            type=\"text\"\n            icon={<FileTextOutlined />}\n          />\n        </BaseTooltip>\n      }\n      {...props}\n    />\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { OpenURLInput } from '@app/components/common/inputs/OpenURLInput/OpenURLInput';\nimport { websitePattern } from '@app/constants/patterns';\n\nconst scheme = 'https://';\n\ninterface WebsiteItemProps {\n  website?: string;\n}\n\nexport const WebsiteItem: React.FC<WebsiteItemProps> = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item shouldUpdate>\n      {({ getFieldValue }) => {\n        const website = getFieldValue('website');\n\n        return (\n          <BaseButtonsForm.Item\n            name=\"website\"\n            label={t('profile.nav.personalInfo.website')}\n            rules={[\n              {\n                pattern: websitePattern,\n                message: t('profile.nav.personalInfo.notValidWebsite'),\n              },\n            ]}\n          >\n            <OpenURLInput href={`${scheme}${website}`} target=\"_blank\" addonBefore={scheme} />\n          </BaseButtonsForm.Item>\n        );\n      }}\n    </BaseButtonsForm.Item>\n  );\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { FirstNameItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/FirstNameItem/FirstNameItem';\nimport { LastNameItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/LastNameItem/LastNameItem';\nimport { NicknameItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/NicknameItem/NicknameItem';\nimport { SexItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/SexItem/SexItem';\nimport { BirthdayItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/BirthdayItem/BirthdayItem';\nimport { LanguageItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/LanguageItem/LanguageItem';\nimport { PhoneItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PhoneItem/PhoneItem';\nimport { EmailItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/EmailItem/EmailItem';\nimport { CountriesItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/CountriesItem/CountriesItem';\nimport { CitiesItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/CitiesItem/CitiesItem';\nimport { ZipcodeItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/ZipcodeItem/ZipcodeItem';\nimport { AddressItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/AddressItem/AddressItem';\nimport { WebsiteItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/WebsiteItem/WebsiteItem';\nimport { SocialLinksItem } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/SocialLinksItem/SocialLinksItem';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { Dates } from '@app/constants/Dates';\nimport { notificationController } from '@app/controllers/notificationController';\nimport { PaymentCard } from '@app/interfaces/interfaces';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\ninterface PersonalInfoFormValues {\n  birthday?: string;\n  lastName: string;\n  country?: string;\n  website: string;\n  city?: string;\n  address2: string;\n  nickName: string;\n  address1: string;\n  sex?: string;\n  facebook: string;\n  language?: string;\n  linkedin: string;\n  zipcode: string;\n  firstName: string;\n  twitter: string;\n  phone: string;\n  email: string;\n}\n\nconst initialPersonalInfoValues: PersonalInfoFormValues = {\n  firstName: '',\n  lastName: '',\n  nickName: '',\n  sex: undefined,\n  birthday: undefined,\n  language: undefined,\n  phone: '',\n  email: '',\n  country: undefined,\n  city: undefined,\n  address1: '',\n  address2: '',\n  zipcode: '',\n  website: '',\n  twitter: '',\n  linkedin: '',\n  facebook: '',\n};\n\nexport const PersonalInfo: React.FC = () => {\n  const user = useAppSelector((state) => state.user.user);\n\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const userFormValues = useMemo(\n    () =>\n      user\n        ? {\n            name: user.name,\n            // lastName: user.lastName,\n            email: user.email,\n            phone: user.phone,\n            // nickname: user.userName,\n            // sex: user.sex,\n            // birthday: Dates.getDate(user.birthday),\n            // language: user.lang,\n            // country: user.country,\n            // city: user.city,\n            // address1: user.address1,\n            // address2: user?.address2,\n            // zipcode: user.zipcode,\n            website: user?.website,\n            // twitter: user?.socials?.twitter,\n            // linkedin: user?.socials?.linkedin,\n            // facebook: user?.socials?.facebook,\n          }\n        : initialPersonalInfoValues,\n    [user],\n  );\n\n  const [form] = BaseButtonsForm.useForm();\n\n  const { t } = useTranslation();\n\n  const onFinish = useCallback(\n    (values: PaymentCard) => {\n      // todo dispatch an action here\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false);\n        setFieldsChanged(false);\n        notificationController.success({ message: t('common.success') });\n        console.log(values);\n      }, 1000);\n    },\n    [t],\n  );\n\n  return (\n    <BaseCard>\n      <BaseButtonsForm\n        form={form}\n        name=\"info\"\n        loading={isLoading}\n        initialValues={userFormValues}\n        isFieldsChanged={isFieldsChanged}\n        setFieldsChanged={setFieldsChanged}\n        onFieldsChange={() => setFieldsChanged(true)}\n        onFinish={onFinish}\n      >\n        <BaseRow gutter={{ xs: 10, md: 15, xl: 30 }}>\n          <BaseCol span={24}>\n            <BaseButtonsForm.Item>\n              <BaseButtonsForm.Title>{t('profile.nav.personalInfo.title')}</BaseButtonsForm.Title>\n            </BaseButtonsForm.Item>\n          </BaseCol>\n\n          <BaseCol xs={24} md={12}>\n            <FirstNameItem />\n          </BaseCol>\n          {/* \n          <BaseCol xs={24} md={12}>\n            <LastNameItem />\n          </BaseCol>\n\n          <BaseCol xs={24} md={12}>\n            <NicknameItem />\n          </BaseCol>\n\n          <BaseCol xs={24} md={12}>\n            <SexItem />\n          </BaseCol>\n\n          <BaseCol xs={24} md={12}>\n            <BirthdayItem />\n          </BaseCol>\n\n          <BaseCol xs={24} md={12}>\n            <LanguageItem />\n          </BaseCol>\n\n          <BaseCol span={24}>\n            <BaseButtonsForm.Item>\n              <BaseButtonsForm.Title>{t('profile.nav.personalInfo.contactInfo')}</BaseButtonsForm.Title>\n            </BaseButtonsForm.Item>\n          </BaseCol> */}\n\n          <BaseCol xs={24} md={12}>\n            <PhoneItem verified={user?.phone ? true : false} />\n          </BaseCol>\n\n          <BaseCol xs={24} md={12}>\n            <EmailItem verified={user?.email ? true : false} />\n          </BaseCol>\n\n          {/* <BaseCol span={24}>\n            <BaseButtonsForm.Item>\n              <BaseButtonsForm.Title>{t('common.address')}</BaseButtonsForm.Title>\n            </BaseButtonsForm.Item>\n          </BaseCol>\n\n          <BaseCol xs={24} md={12}>\n            <CountriesItem />\n          </BaseCol>\n\n          <BaseCol xs={24} md={12}>\n            <CitiesItem />\n          </BaseCol>\n\n          <BaseCol xs={24} md={12}>\n            <AddressItem number={1} />\n          </BaseCol>\n\n          <BaseCol xs={24} md={12}>\n            <AddressItem number={2} />\n          </BaseCol>\n\n          <BaseCol xs={24} md={12}>\n            <ZipcodeItem />\n          </BaseCol>\n\n          <BaseCol span={24}>\n            <BaseButtonsForm.Item>\n              <BaseButtonsForm.Title>{t('profile.nav.personalInfo.otherInfo')}</BaseButtonsForm.Title>\n            </BaseButtonsForm.Item>\n          </BaseCol> */}\n\n          <BaseCol xs={24} md={12}>\n            <WebsiteItem />\n          </BaseCol>\n          {/* \n          <BaseCol span={24}>\n            <SocialLinksItem />\n          </BaseCol> */}\n        </BaseRow>\n      </BaseButtonsForm>\n    </BaseCard>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PersonalInfo } from '@app/components/profile/profileCard/profileFormNav/nav/PersonalInfo/PersonalInfo';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\n\nconst PersonalInfoPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('profile.nav.personalInfo.title')}</PageTitle>\n      <PersonalInfo />\n    </>\n  );\n};\n\nexport default PersonalInfoPage;\n"],"sourceRoot":""}