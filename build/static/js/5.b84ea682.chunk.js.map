{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","constants/patterns.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/CurrentPasswordItem/CurrentPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/NewPasswordItem/NewPasswordItem.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/PasswordForm/PasswordForm.styles.ts","components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/PasswordForm/PasswordForm.tsx","components/profile/profileCard/profileFormNav/nav/SecuritySettings/SecuritySettings.tsx","pages/SecuritySettingsPage.tsx"],"names":["BaseButtonsForm","_ref","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","formDefault","BaseForm","useForm","currentForm","_jsxs","_jsx","BaseButtonsGroup","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","className","t","useTranslation","BaseRow","gutter","wrap","BaseCol","span","BaseButton","block","type","onClick","htmlType","passwordPattern","RegExp","websitePattern","ConfirmItemPassword","name","label","dependencies","rules","required","message","getFieldValue","validator","_","value","Promise","reject","Error","resolve","InputPassword","CurrentPasswordItem","NewPasswordItem","pattern","Btn","styled","_templateObject","_taggedTemplateLiteral","media","md","xl","PasswordForm","useState","isLoading","setLoading","requiredMark","onFieldsChange","S","onFinish","values","setTimeout","notificationController","success","console","log","xs","SecuritySettings","BaseCard","SecuritySettingsPage","_Fragment","PageTitle"],"mappings":"0HAAA,8FAcO,MAAMA,EAA2DC,IAQjE,IARkE,KACvEC,EAAI,gBACJC,EAAe,iBACfC,EAAgB,OAChBC,EAAM,QACNC,GAAU,EAAK,SACfC,KACGC,GACJP,EACC,MAAOQ,GAAeC,IAASC,UACzBC,EAAcV,GAAQO,EAO5B,OACEI,eAACH,IAAQ,CAACR,KAAMU,KAAiBJ,EAAKD,SAAA,CACnCA,EACAJ,IAAoBE,GAAUS,cAACC,IAAgB,CAACT,QAASA,EAASU,SARtDA,KACJ,OAAXJ,QAAW,IAAXA,KAAaK,cACbb,GAAoBA,GAAiB,EAAM,OAOhC,EAIfJ,EAAgBkB,MAAQC,IACxBnB,EAAgBoB,KAAOC,IACvBrB,EAAgBsB,KAAOC,IACvBvB,EAAgBW,QAAUD,IAASC,QACnCX,EAAgBwB,SAAWd,IAASc,Q,mCC3CpC,mFAYO,MAAMT,EAAoDd,IAAiD,IAAhD,UAAEwB,EAAS,SAAET,EAAQ,QAAEV,KAAYE,GAAOP,EAC1G,MAAM,EAAEyB,GAAMC,cAEd,OACEd,eAACe,IAAO,CAACH,UAAWA,EAAWI,OAAQ,CAAC,GAAI,IAAKC,MAAM,EAAMvB,SAAA,CAC3DO,cAACiB,IAAO,CAACC,KAAM,GAAGzB,SAChBO,cAACmB,IAAU,CAACC,OAAK,EAACC,KAAK,QAAQC,QAASpB,KAAcR,EAAKD,SACxDmB,EAAE,qBAGPZ,cAACiB,IAAO,CAACC,KAAM,GAAGzB,SAChBO,cAACmB,IAAU,CAACC,OAAK,EAACC,KAAK,UAAU7B,QAASA,EAAS+B,SAAS,YAAa7B,EAAKD,SAC3EmB,EAAE,qBAGC,C,mCC3Bd,oEAAO,MAAMY,EAAkB,IAAIC,OAAO,kDAE7BC,EAAiB,oF,gGCGvB,MAAMC,EAAgCA,KAC3C,MAAM,EAAEf,GAAMC,cAEd,OACEb,cAACd,IAAgBoB,KAAI,CACnBsB,KAAK,kBACLC,MAAOjB,EAAE,gDACTkB,aAAc,CAAC,eACfC,MAAO,CACL,CACEC,UAAU,EACVC,QAASrB,EAAE,kDAEbzB,IAAA,IAAC,cAAE+C,GAAe/C,EAAA,MAAM,CACtBgD,UAASA,CAACC,EAAGC,IACNA,GAASH,EAAc,iBAAmBG,EAGxCC,QAAQC,OAAO,IAAIC,MAAM5B,EAAE,oDAFzB0B,QAAQG,UAIpB,GACDhD,SAEFO,cAAC0C,IAAa,KACO,ECxBdC,EAAgCA,KAC3C,MAAM,EAAE/B,GAAMC,cAEd,OACEb,cAACd,IAAgBoB,KAAI,CACnBsB,KAAK,WACLC,MAAOjB,EAAE,gDACTmB,MAAO,CACL,CACEC,UAAU,EACVC,QAASrB,EAAE,mDAEbnB,SAEFO,cAAC0C,IAAa,KACO,E,aCdpB,MAAME,EAA4BA,KACvC,MAAM,EAAEhC,GAAMC,cAEd,OACEb,cAACd,IAAgBoB,KAAI,CACnBsB,KAAK,cACLC,MAAOjB,EAAE,4CACTkB,aAAc,CAAC,YACfC,MAAO,CACL,CACEC,UAAU,EACVC,QAASrB,EAAE,kDAEb,CACEiC,QAASrB,IACTS,QAASrB,EAAE,kDAEbzB,IAAA,IAAC,cAAE+C,GAAe/C,EAAA,MAAM,CACtBgD,UAASA,CAACC,EAAGC,IACNA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OAAO,IAAIC,MAAM5B,EAAE,+CAFzB0B,QAAQG,UAIpB,GACDhD,SAEFO,cAAC0C,IAAa,KACO,E,4CC9BpB,MAAMI,EAAMC,YAAO5B,IAAP4B,CAAkBC,MAAAC,YAAA,mLAIVC,IAAMC,GAIND,IAAME,I,oBCD1B,MAAMC,EAAyBA,KACpC,MAAOhE,EAAiBC,GAAoBgE,oBAAS,IAC9CC,EAAWC,GAAcF,oBAAS,IACnC,EAAE1C,GAAMC,cAYd,OACEb,cAACd,IAAe,CACd0C,KAAK,cACL6B,aAAa,WACbpE,gBAAiBA,EACjBqE,eAAgBA,IAAMpE,GAAiB,GACvCC,OACES,cAAC2D,EAAK,CAACnE,QAAS+D,EAAWlC,KAAK,UAAUE,SAAS,SAAQ9B,SACxDmB,EAAE,oBAGPgD,SArBcC,IAChBL,GAAW,GACXM,YAAW,KACTN,GAAW,GACXlE,GAAiB,GACjByE,IAAuBC,QAAQ,CAAE/B,QAASrB,EAAE,oBAC5CqD,QAAQC,IAAIL,EAAO,GAClB,IAAK,EAcapE,SAEnBM,eAACe,IAAO,CAACC,OAAQ,CAAEoC,GAAI,GAAIC,GAAI,IAAK3D,SAAA,CAClCO,cAACiB,IAAO,CAACC,KAAM,GAAGzB,SAChBO,cAACd,IAAgBoB,KAAI,CAAAb,SACnBO,cAACd,IAAgBkB,MAAK,CAAAX,SAAEmB,EAAE,qDAI9BZ,cAACiB,IAAO,CAACkD,GAAI,GAAIhB,GAAI,GAAIC,GAAI,GAAG3D,SAC9BO,cAAC2C,EAAmB,MAGtB3C,cAACiB,IAAO,CAACkD,GAAI,GAAIhB,GAAI,GAAIC,GAAI,GAAG3D,SAC9BO,cAAC4C,EAAe,MAGlB5C,cAACiB,IAAO,CAACkD,GAAI,GAAIhB,GAAI,GAAIC,GAAI,GAAG3D,SAC9BO,cAAC2B,EAAmB,UAGR,ECnDTyC,EAA6BA,IACxCpE,cAACqE,IAAQ,CAAA5E,SACPO,cAACc,IAAO,CAACC,OAAQ,CAAC,GAAI,GAAGtB,SACvBO,cAACiB,IAAO,CAACkD,GAAI,GAAIf,GAAI,GAAG3D,SACtBO,cAACqD,EAAY,U,YCKNiB,UAXwBA,KACrC,MAAM,EAAE1D,GAAMC,cAEd,OACEd,eAAAwE,WAAA,CAAA9E,SAAA,CACEO,cAACwE,IAAS,CAAA/E,SAAEmB,EAAE,wCACdZ,cAACoE,EAAgB,MAChB,C","file":"static/js/5.b84ea682.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React from 'react';\nimport { BaseButton, BaseButtonProps } from '@app/components/common/BaseButton/BaseButton';\nimport { useTranslation } from 'react-i18next';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\ninterface BaseButtonsGroupProps extends BaseButtonProps {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseRow className={className} gutter={[10, 10]} wrap={false}>\n      <BaseCol span={12}>\n        <BaseButton block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </BaseButton>\n      </BaseCol>\n      <BaseCol span={12}>\n        <BaseButton block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </BaseButton>\n      </BaseCol>\n    </BaseRow>\n  );\n};\n","export const passwordPattern = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/);\n\nexport const websitePattern = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?/gi;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\n\nexport const ConfirmItemPassword: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"confirmPassword\"\n      label={t('profile.nav.securitySettings.confirmPassword')}\n      dependencies={['newPassword']}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n        ({ getFieldValue }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('newPassword') === value) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.securitySettings.dontMatchPassword')));\n          },\n        }),\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\n\nexport const CurrentPasswordItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"password\"\n      label={t('profile.nav.securitySettings.currentPassword')}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { InputPassword } from '@app/components/common/inputs/InputPassword/InputPassword';\nimport { passwordPattern } from '@app/constants/patterns';\n\nexport const NewPasswordItem: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"newPassword\"\n      label={t('profile.nav.securitySettings.newPassword')}\n      dependencies={['password']}\n      rules={[\n        {\n          required: true,\n          message: t('profile.nav.securitySettings.requiredPassword'),\n        },\n        {\n          pattern: passwordPattern,\n          message: t('profile.nav.securitySettings.notValidPassword'),\n        },\n        ({ getFieldValue }) => ({\n          validator(_, value) {\n            if (!value || getFieldValue('password') !== value) {\n              return Promise.resolve();\n            }\n            return Promise.reject(new Error(t('profile.nav.securitySettings.samePassword')));\n          },\n        }),\n      ]}\n    >\n      <InputPassword />\n    </BaseButtonsForm.Item>\n  );\n};\n","import { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { media } from '@app/styles/themes/constants';\nimport styled from 'styled-components';\n\nexport const Btn = styled(BaseButton)`\n  margin: 0.5rem 0 1.5rem 0;\n  width: 100%;\n\n  @media only screen and ${media.md} {\n    max-width: 10rem;\n  }\n\n  @media only screen and ${media.xl} {\n    max-width: unset;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { ConfirmItemPassword } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/ConfirmPasswordItem/ConfirmPasswordItem';\nimport { CurrentPasswordItem } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/CurrentPasswordItem/CurrentPasswordItem';\nimport { NewPasswordItem } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/passwordForm/NewPasswordItem/NewPasswordItem';\nimport { notificationController } from '@app/controllers/notificationController';\nimport * as S from './PasswordForm.styles';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\nexport const PasswordForm: React.FC = () => {\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const { t } = useTranslation();\n\n  const onFinish = (values: []) => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      setFieldsChanged(false);\n      notificationController.success({ message: t('common.success') });\n      console.log(values);\n    }, 1000);\n  };\n\n  return (\n    <BaseButtonsForm\n      name=\"newPassword\"\n      requiredMark=\"optional\"\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n      footer={\n        <S.Btn loading={isLoading} type=\"primary\" htmlType=\"submit\">\n          {t('common.confirm')}\n        </S.Btn>\n      }\n      onFinish={onFinish}\n    >\n      <BaseRow gutter={{ md: 15, xl: 30 }}>\n        <BaseCol span={24}>\n          <BaseButtonsForm.Item>\n            <BaseButtonsForm.Title>{t('profile.nav.securitySettings.changePassword')}</BaseButtonsForm.Title>\n          </BaseButtonsForm.Item>\n        </BaseCol>\n\n        <BaseCol xs={24} md={12} xl={24}>\n          <CurrentPasswordItem />\n        </BaseCol>\n\n        <BaseCol xs={24} md={12} xl={24}>\n          <NewPasswordItem />\n        </BaseCol>\n\n        <BaseCol xs={24} md={12} xl={24}>\n          <ConfirmItemPassword />\n        </BaseCol>\n      </BaseRow>\n    </BaseButtonsForm>\n  );\n};\n","import React from 'react';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { PasswordForm } from './passwordForm/PasswordForm/PasswordForm';\nimport { TwoFactorAuth } from './twoFactorAuth/TwoFactorAuth';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\nexport const SecuritySettings: React.FC = () => (\n  <BaseCard>\n    <BaseRow gutter={[30, 0]}>\n      <BaseCol xs={24} xl={10}>\n        <PasswordForm />\n      </BaseCol>\n\n      {/* <BaseCol xs={24} xl={14}>\n        <TwoFactorAuth />\n      </BaseCol> */}\n    </BaseRow>\n  </BaseCard>\n);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { SecuritySettings } from '@app/components/profile/profileCard/profileFormNav/nav/SecuritySettings/SecuritySettings';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\n\nconst SecuritySettingsPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('profile.nav.securitySettings.title')}</PageTitle>\n      <SecuritySettings />\n    </>\n  );\n};\n\nexport default SecuritySettingsPage;\n"],"sourceRoot":""}