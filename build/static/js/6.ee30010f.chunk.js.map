{"version":3,"sources":["components/common/forms/BaseButtonsForm/BaseButtonsForm.tsx","components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup.tsx","constants/paymentStatuses.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Status/Status.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Status/Status.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Payment/Payment.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Payment/Payment.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentsTable/PaymentsTable.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentsTable/PaymentsTable.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentHistory/PaymentHistory.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentHistory/PaymentHistory.tsx","api/paymentHistory.api.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCard/PaymentCard.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCard/PaymentCard.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/ActionButtons/ActionButtons.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/ActionButtons/ActionButtons.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardButton/AddNewCardButton.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardNumberItem/CardNumberItem.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardholderItem/CardholderItem.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/ExpDateItem/ExpDateItem.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CVVItem/CVVItem.tsx","constants/cardThemes.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardThemeItem/CardThemeItem.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardThemeItem/CardThemeItem.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/PaymentForm/PaymentForm.styles.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/PaymentForm/PaymentForm.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardModal.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardButton/AddNewCardButton.tsx","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCardsWidget.tsx","api/paymentCards.api.ts","components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentMethod.tsx","components/profile/profileCard/profileFormNav/nav/payments/Payments.tsx","pages/PaymentsPage.tsx"],"names":["BaseButtonsForm","_ref","form","isFieldsChanged","setFieldsChanged","footer","loading","children","props","formDefault","BaseForm","useForm","currentForm","_jsxs","_jsx","BaseButtonsGroup","onCancel","resetFields","Title","BaseFormTitle","Item","BaseFormItem","List","BaseFormList","Provider","className","t","useTranslation","BaseRow","gutter","wrap","BaseCol","span","BaseButton","block","type","onClick","htmlType","paymentStatuses","id","name","priority","Priority","LOW","INFO","MEDIUM","HIGH","StatusTag","styled","BaseTag","_templateObject","_taggedTemplateLiteral","media","md","Status","color","text","S","Header","div","AvatarWrapper","_templateObject2","Text","BaseTypography","_templateObject3","ContentWrapper","_templateObject4","_templateObject5","Subtitle","_templateObject6","DetailsWrapper","_templateObject7","Payment","src","recipient","date","status","price","currency","paymentStatus","useMemo","find","item","_Fragment","BaseAvatar","alt","shape","Dates","format","defineColorByPriority","getCurrencyPrice","PaymentHistoryTable","BaseTable","RecipientWrapper","PaymentsTable","payments","columns","title","dataIndex","key","render","img","align","sorter","a","b","toUpperCase","dataSource","map","payment","index","imgUrl","totalAmount","amount","details","size","pagination","isEmptyHistory","concat","defaultPaddings","mobile","tablet","xl","PaymentHistory","history","setHistory","useState","mobileOnly","isTablet","useResponsive","useEffect","Promise","res","setTimeout","CurrencyTypeEnum","USD","then","content","length","BaseCard","Wrapper","$background","PaymentCard","cardData","background","Cards","BtnWrapper","ActionButtons","onRemove","BasePopconfirm","onConfirm","icon","DeleteOutlined","AddBtn","CardNumberItem","disabled","handleInputFocus","label","rules","required","message","MaskedInput","placeholder","mask","onFocus","CardholderItem","BaseInput","ExpDateItem","CVVItem","cardThemes","BackgroundWrapper","BORDER_RADIUS","isActive","Theme","CardThemeItem","setCardData","handleChange","useCallback","themes","xs","tabIndex","PayCard","FormItemsWrapper","clearCardData","cvc","expiry","number","focused","isEdit","PaymentForm","closeModal","onFormFinish","isLoading","setLoading","event","target","onFinish","values","card","setFieldsValue","requiredMark","initialValues","onValuesChange","field","Object","entries","onFieldsChange","AddNewCardModal","isModalOpen","onCardAdd","BaseModal","destroyOnClose","open","closable","AddNewCardButton","setModalOpen","openModal","PaymentCardsWidget","cards","onCardRemove","useMediaQuery","justify","query","PaymentMethod","setCards","_id","useAppSelector","state","_state$user","_state$user$user","user","finally","BaseSpin","spinning","cardNumber","filter","Payments","PaymentsPage","PageTitle"],"mappings":"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","file":"static/js/6.ee30010f.chunk.js","sourcesContent":["import React from 'react';\nimport { BaseForm, BaseFormInterface, BaseFormProps } from '@app/components/common/forms//BaseForm/BaseForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { BaseFormTitle } from '@app/components/common/forms/components/BaseFormTitle/BaseFormTitle';\nimport { BaseFormItem } from '@app/components/common/forms/components/BaseFormItem/BaseFormItem';\nimport { BaseFormList } from '@app/components/common/forms/components/BaseFormList/BaseFormList';\n\nexport interface BaseButtonsFormProps extends BaseFormProps {\n  isFieldsChanged: boolean;\n  setFieldsChanged?: (state: boolean) => void;\n  footer?: React.ReactElement;\n  loading?: boolean;\n}\n\nexport const BaseButtonsForm: BaseFormInterface<BaseButtonsFormProps> = ({\n  form,\n  isFieldsChanged,\n  setFieldsChanged,\n  footer,\n  loading = false,\n  children,\n  ...props\n}) => {\n  const [formDefault] = BaseForm.useForm();\n  const currentForm = form || formDefault;\n\n  const onCancel = () => {\n    currentForm?.resetFields();\n    setFieldsChanged && setFieldsChanged(false);\n  };\n\n  return (\n    <BaseForm form={currentForm} {...props}>\n      {children}\n      {isFieldsChanged && (footer || <BaseButtonsGroup loading={loading} onCancel={onCancel} />)}\n    </BaseForm>\n  );\n};\n\nBaseButtonsForm.Title = BaseFormTitle;\nBaseButtonsForm.Item = BaseFormItem;\nBaseButtonsForm.List = BaseFormList;\nBaseButtonsForm.useForm = BaseForm.useForm;\nBaseButtonsForm.Provider = BaseForm.Provider;\n","import React from 'react';\nimport { BaseButton, BaseButtonProps } from '@app/components/common/BaseButton/BaseButton';\nimport { useTranslation } from 'react-i18next';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\ninterface BaseButtonsGroupProps extends BaseButtonProps {\n  className?: string;\n  onCancel: () => void;\n  loading?: boolean;\n}\n\nexport const BaseButtonsGroup: React.FC<BaseButtonsGroupProps> = ({ className, onCancel, loading, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseRow className={className} gutter={[10, 10]} wrap={false}>\n      <BaseCol span={12}>\n        <BaseButton block type=\"ghost\" onClick={onCancel} {...props}>\n          {t('common.cancel')}\n        </BaseButton>\n      </BaseCol>\n      <BaseCol span={12}>\n        <BaseButton block type=\"primary\" loading={loading} htmlType=\"submit\" {...props}>\n          {t('common.save')}\n        </BaseButton>\n      </BaseCol>\n    </BaseRow>\n  );\n};\n","import { Priority } from './enums/priorities';\n\nexport interface PaymentStatus {\n  id: number;\n  name: string;\n  priority: Priority;\n}\n\nexport const paymentStatuses: PaymentStatus[] = [\n  {\n    id: 1,\n    name: 'profile.nav.payments.status.paid',\n    priority: Priority.LOW,\n  },\n  {\n    id: 2,\n    name: 'profile.nav.payments.status.scheduled',\n    priority: Priority.INFO,\n  },\n  {\n    id: 3,\n    name: 'profile.nav.payments.status.pending',\n    priority: Priority.MEDIUM,\n  },\n  {\n    id: 4,\n    name: 'profile.nav.payments.status.failed',\n    priority: Priority.HIGH,\n  },\n];\n","import styled from 'styled-components';\nimport { media } from '@app/styles/themes/constants';\nimport { BaseTag } from '@app/components/common/BaseTag/BaseTag';\n\nexport const StatusTag = styled(BaseTag)`\n  padding: 0.375rem 0;\n  min-width: 7.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n\n  @media only screen and ${media.md} {\n    min-width: 6.5rem;\n  }\n`;\n","import React from 'react';\nimport * as S from './Status.styles';\n\ninterface StatusProps {\n  color: string;\n  text: string;\n}\n\nexport const Status: React.FC<StatusProps> = ({ color, text }) => <S.StatusTag color={color}>{text}</S.StatusTag>;\n","import { BaseTypography } from '@app/components/common/BaseTypography/BaseTypography';\nimport styled from 'styled-components';\n\nexport const Header = styled.div`\n  padding: 1.5rem 3.5rem;\n  display: flex;\n  align-items: center;\n\n  background-color: var(--secondary-background-color);\n`;\n\nexport const AvatarWrapper = styled.div`\n  width: 2rem;\n  margin-right: 1.25rem;\n`;\n\nexport const Text = styled(BaseTypography.Text)`\n  font-weight: 600;\n`;\n\nexport const ContentWrapper = styled.div`\n  padding: 1rem 2rem;\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    height: 1px;\n\n    background-color: 1px solid rgba(var(--primary-rgb-color), 0.3);\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n\n  &:nth-last-of-type(1) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Subtitle = styled(BaseTypography.Text)`\n  font-weight: 500;\n  font-size: 0.75rem;\n\n  color: var(--primary-color);\n`;\n\nexport const DetailsWrapper = styled.div`\n  padding: 0.8rem;\n  text-align: center;\n`;\n","import React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { defineColorByPriority, getCurrencyPrice } from '@app/utils/utils';\nimport { paymentStatuses } from 'constants/paymentStatuses';\nimport { Dates } from 'constants/Dates';\nimport { Status } from '../Status/Status';\nimport * as S from './Payment.styles';\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { CurrencyTypeEnum } from '@app/interfaces/interfaces';\nimport { BaseAvatar } from '@app/components/common/BaseAvatar/BaseAvatar';\n\ninterface PaymentProps {\n  src: string;\n  recipient: string;\n  date: number;\n  status: number;\n  price: number;\n  currency: CurrencyTypeEnum;\n}\n\nexport const Payment: React.FC<PaymentProps> = ({ src, recipient, date, status, price, currency }) => {\n  const { t } = useTranslation();\n\n  const paymentStatus = useMemo(() => paymentStatuses.find((item) => item.id === status), [status]);\n\n  return paymentStatus ? (\n    <>\n      <S.Header>\n        <S.AvatarWrapper>\n          <BaseAvatar src={src} alt={recipient} shape=\"circle\" />\n        </S.AvatarWrapper>\n        <S.Text>{recipient}</S.Text>\n      </S.Header>\n      <S.ContentWrapper>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.date')}</S.Subtitle>\n          <S.Text>{Dates.format(date, 'LL')}</S.Text>\n        </S.Item>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.status.title')}</S.Subtitle>\n          <Status color={defineColorByPriority(paymentStatus.priority)} text={t(paymentStatus.name)} />\n        </S.Item>\n        <S.Item>\n          <S.Subtitle>{t('profile.nav.payments.date')}</S.Subtitle>\n          <S.Text>{getCurrencyPrice(price, currency)}</S.Text>\n        </S.Item>\n      </S.ContentWrapper>\n      <S.DetailsWrapper>\n        <BaseButton type=\"link\">{t('profile.nav.payments.details')}</BaseButton>\n      </S.DetailsWrapper>\n    </>\n  ) : null;\n};\n","import { BaseTable } from '@app/components/common/BaseTable/BaseTable';\nimport styled from 'styled-components';\n\nexport const PaymentHistoryTable = styled(BaseTable)`\n  .ant-table-thead > tr > th {\n    border-top: 1px solid rgba(var(--primary-rgb-color), 0.3);\n\n    border-bottom: 1px solid rgba(var(--primary-rgb-color), 0.3);\n\n    color: var(--primary-color);\n\n    text-align: center;\n\n    &::before {\n      display: none;\n    }\n  }\n\n  .ant-table-tbody > tr > td {\n    border-bottom: 1px solid rgba(var(--primary--rgb-color), 0.3);\n\n    font-weight: 600;\n    font-size: 1rem;\n  }\n`;\n\nexport const RecipientWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: left;\n\n  & > span:first-of-type {\n    margin-right: 0.5rem;\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ColumnType } from 'antd/lib/table';\nimport { Dates } from 'constants/Dates';\nimport { Status } from '../Status/Status';\nimport { paymentStatuses, PaymentStatus } from 'constants/paymentStatuses';\nimport { defineColorByPriority, getCurrencyPrice } from '@app/utils/utils';\nimport { Payment } from 'api/paymentHistory.api';\nimport * as S from './PaymentsTable.styles';\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { BaseAvatar } from '@app/components/common/BaseAvatar/BaseAvatar';\n\ninterface Recipient {\n  name: string;\n  img: string;\n}\n\ninterface Status {\n  key: number;\n  recipient: Recipient;\n  date: number;\n  status: PaymentStatus | undefined;\n  totalAmount: string | React.ReactNode;\n}\n\ninterface PaymentsTableProps {\n  payments: Payment[];\n}\n\nexport const PaymentsTable: React.FC<PaymentsTableProps> = ({ payments }) => {\n  const { t } = useTranslation();\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const columns: ColumnType<any>[] = useMemo(() => {\n    return [\n      {\n        title: t('profile.nav.payments.recipient'),\n        dataIndex: 'recipient',\n        key: 'recipient',\n        render: (recipient: Recipient) => (\n          <S.RecipientWrapper>\n            <BaseAvatar src={recipient.img} alt={recipient.name} />\n            {recipient.name}\n          </S.RecipientWrapper>\n        ),\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.date'),\n        dataIndex: 'date',\n        key: 'date',\n        render: (text: string) => Dates.format(text, 'LL'),\n        sorter: (a, b) => a.date - b.date,\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.status.title'),\n        dataIndex: 'status',\n        key: 'status',\n        render: (status: PaymentStatus) => (\n          <Status color={defineColorByPriority(status.priority)} text={t(status.name).toUpperCase()} />\n        ),\n        align: 'center',\n      },\n      {\n        title: t('profile.nav.payments.totalAmount'),\n        dataIndex: 'totalAmount',\n        key: 'totalAmount',\n        align: 'center',\n      },\n      {\n        title: '',\n        dataIndex: 'details',\n        key: 'details',\n        align: 'center',\n        render: () => <BaseButton type=\"link\">{t('profile.nav.payments.details')}</BaseButton>,\n      },\n    ];\n  }, [t]);\n\n  const dataSource: Status[] = useMemo(\n    () =>\n      payments.map((payment, index) => {\n        return {\n          key: index,\n          recipient: {\n            name: payment.recipient,\n            img: payment.imgUrl,\n          },\n          date: payment.date,\n          status: paymentStatuses.find((status) => status.id === payment.status),\n          totalAmount: getCurrencyPrice(payment.amount, payment.currency),\n          details: payment,\n        };\n      }),\n    [payments],\n  );\n\n  return <S.PaymentHistoryTable size=\"middle\" columns={columns} dataSource={dataSource} pagination={false} />;\n};\n","import styled from 'styled-components';\nimport { defaultPaddings } from '@app/constants/defaultPaddings';\nimport { media } from '@app/styles/themes/constants';\nimport { BaseTypography } from '@app/components/common/BaseTypography/BaseTypography';\n\ninterface ContentWrapperProps {\n  isEmptyHistory: boolean;\n}\n\nexport const ContentWrapper = styled.div<ContentWrapperProps>`\n  ${(props) =>\n    !props.isEmptyHistory &&\n    `margin: 0 -${defaultPaddings.mobile[1]}px -${defaultPaddings.mobile[0]}px -${defaultPaddings.mobile[1]}px`};\n\n  @media only screen and ${media.md} {\n    ${(props) =>\n      !props.isEmptyHistory &&\n      `margin: 0 -${defaultPaddings.tablet[1]}px -${defaultPaddings.tablet[0]}px -${defaultPaddings.tablet[1]}px`};\n  }\n\n  @media only screen and ${media.xl} {\n    margin: 0;\n  }\n`;\n\nexport const Text = styled(BaseTypography.Text)`\n  @media only screen and ${media.md} {\n    font-size: 1rem;\n  }\n`;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { Payment } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/Payment/Payment';\nimport { PaymentsTable } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentHistory/PaymentsTable/PaymentsTable';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { getPaymentHistory, Payment as IPayment } from '@app/api/paymentHistory.api';\nimport * as S from './PaymentHistory.styles';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\nexport const PaymentHistory: React.FC = () => {\n  const [history, setHistory] = useState<IPayment[]>([]);\n\n  const { mobileOnly, isTablet } = useResponsive();\n\n  const { t } = useTranslation();\n\n  const payments = useMemo(\n    () =>\n      history.map((item) => (\n        <Payment\n          key={item.id}\n          src={item.imgUrl}\n          recipient={item.recipient}\n          date={item.date}\n          status={item.status}\n          price={item.amount}\n          currency={item.currency}\n        />\n      )),\n    [history],\n  );\n\n  useEffect(() => {\n    getPaymentHistory().then((res) => setHistory(res));\n  }, []);\n\n  const content = useMemo(\n    () => (\n      <BaseRow gutter={[32, 32]}>\n        <BaseCol span={24}>\n          <BaseForm.Title>{t('profile.nav.payments.paymentHistory')}</BaseForm.Title>\n        </BaseCol>\n\n        <BaseCol span={24}>\n          <S.ContentWrapper isEmptyHistory={history.length === 0}>\n            {mobileOnly && (history.length > 0 ? payments : <S.Text>{t('profile.nav.payments.noHistory')}</S.Text>)}\n\n            {isTablet && <PaymentsTable payments={history} />}\n          </S.ContentWrapper>\n        </BaseCol>\n      </BaseRow>\n    ),\n    [isTablet, history, payments, mobileOnly, t],\n  );\n\n  return isTablet ? content : <BaseCard>{content}</BaseCard>;\n};\n","import { CurrencyTypeEnum } from '@app/interfaces/interfaces';\n\nexport interface Payment {\n  id: number;\n  recipient: string;\n  date: number;\n  status: number;\n  amount: number;\n  currency: CurrencyTypeEnum;\n  imgUrl: string;\n}\n\nexport const getPaymentHistory = (): Promise<Payment[]> => {\n  return new Promise((res) => {\n    setTimeout(() => {\n      res([\n        {\n          id: 1,\n          recipient: 'IBM Transactions',\n          date: 1626037200000,\n          status: 1,\n          amount: 500,\n          currency: CurrencyTypeEnum.USD,\n          imgUrl: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1632988451/Ellipse_72_hwxejr.png',\n        },\n        {\n          id: 2,\n          recipient: 'Citigroup',\n          date: 1630443600000,\n          status: 2,\n          amount: 40,\n          currency: CurrencyTypeEnum.USD,\n          imgUrl: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1632988456/Ellipse_73_zanfs3.png',\n        },\n        {\n          id: 3,\n          recipient: 'Netflix',\n          date: 1628370000000,\n          status: 3,\n          amount: 1200,\n          currency: CurrencyTypeEnum.USD,\n          imgUrl: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1632988460/Ellipse_73_1_hhfpzj.png',\n        },\n        {\n          id: 4,\n          recipient: 'IBM Transactions',\n          date: 1622667600000,\n          status: 4,\n          amount: 190,\n          currency: CurrencyTypeEnum.USD,\n          imgUrl: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1632988451/Ellipse_72_hwxejr.png',\n        },\n      ]);\n    }, 0);\n  });\n};\n","import styled from 'styled-components';\n\ninterface PaymentCardProps {\n  $background: string;\n}\n\nexport const Wrapper = styled.div<PaymentCardProps>`\n  & > .rccs > .rccs__card--unknown > div {\n    background: ${(props) => `url(${props.$background})`};\n    background-size: cover;\n    transition: all 0.5s ease;\n  }\n\n  & > .rccs > .rccs__card {\n    & .rccs__card--front,\n    & .rccs__card--back {\n      box-shadow: none;\n    }\n\n    & > .rccs__card--front .rccs__issuer {\n      right: unset;\n      left: 10%;\n      background-position: left;\n    }\n\n    & > div {\n      color: var(--text-secondary-color);\n\n      & > .rccs__chip {\n        display: none;\n      }\n\n      & > div:first-of-type {\n        background: ${(props) => `url(${props.$background})`};\n        background-size: cover;\n        transition: all 0.5s ease;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport Cards from 'elt-react-credit-cards';\nimport 'elt-react-credit-cards/es/styles-compiled.css';\nimport { PaymentCard as IPaymentCard } from '@app/interfaces/interfaces';\nimport * as S from './PaymentCard.styles';\n\ninterface PaymentCardProps {\n  className?: string;\n  cardData: IPaymentCard;\n  children?: React.ReactNode;\n}\n\nexport const PaymentCard: React.FC<PaymentCardProps> = ({ className, cardData, children }) => (\n  <S.Wrapper className={className} $background={cardData.background}>\n    <Cards {...cardData} />\n    {children}\n  </S.Wrapper>\n);\n","import styled from 'styled-components';\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  position: absolute;\n  column-gap: 1rem;\n  top: 13%;\n  right: 7%;\n\n  & > button {\n    padding: 0;\n    width: unset;\n    height: unset;\n\n    color: var(--text-secondary-color);\n  }\n`;\n","import React from 'react';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport * as S from './ActionButtons.styles';\nimport { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport { BasePopconfirm } from '@app/components/common/BasePopconfirm/BasePopconfirm';\n\ninterface ActionButtonsProps {\n  onRemove: () => void;\n}\n\nexport const ActionButtons: React.FC<ActionButtonsProps> = ({ onRemove }) => {\n  const { t } = useTranslation();\n\n  return (\n    <S.BtnWrapper>\n      <BasePopconfirm title={t('common.deleteQuestion')} onConfirm={onRemove}>\n        <BaseButton type=\"link\" icon={<DeleteOutlined />} />\n      </BasePopconfirm>\n    </S.BtnWrapper>\n  );\n};\n","import { BaseButton } from '@app/components/common/BaseButton/BaseButton';\nimport styled from 'styled-components';\n\nexport const AddBtn = styled(BaseButton)`\n  width: 290px;\n  height: 182.86px;\n  font-size: 2rem;\n  border-radius: 14.5px;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport MaskedInput from 'antd-mask-input';\nimport { CardInputProps } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\n\nexport const CardNumberItem: React.FC<CardInputProps> = ({ disabled, handleInputFocus }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"number\"\n      label={t('profile.nav.payments.cardNumber')}\n      rules={[\n        {\n          required: true,\n          message: t('common.requiredField'),\n        },\n      ]}\n    >\n      <MaskedInput\n        placeholder={t('profile.nav.payments.yourCardNumber')}\n        name=\"number\"\n        mask=\"0000 0000 0000 0000\"\n        onFocus={handleInputFocus}\n        disabled={disabled}\n      />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseInput } from '@app/components/common/inputs/BaseInput/BaseInput';\nimport { CardInputProps } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\n\nexport const CardholderItem: React.FC<CardInputProps> = ({ disabled, handleInputFocus }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"name\"\n      label={t('profile.nav.payments.cardholderName')}\n      rules={[\n        {\n          required: true,\n          message: t('common.requiredField'),\n        },\n      ]}\n    >\n      <BaseInput\n        name=\"name\"\n        placeholder={t('profile.nav.payments.yourName')}\n        onFocus={handleInputFocus}\n        disabled={disabled}\n      />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport MaskedInput from 'antd-mask-input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { CardInputProps } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\n\nexport const ExpDateItem: React.FC<CardInputProps> = ({ disabled, handleInputFocus }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"expiry\"\n      label={t('profile.nav.payments.expDate')}\n      rules={[\n        {\n          required: true,\n          message: t('common.requiredField'),\n        },\n      ]}\n    >\n      <MaskedInput placeholder=\"MM/YY\" mask=\"00/00\" name=\"expiry\" onFocus={handleInputFocus} disabled={disabled} />\n    </BaseButtonsForm.Item>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport MaskedInput from 'antd-mask-input';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { CardInputProps } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/interfaces';\n\nexport const CVVItem: React.FC<CardInputProps> = ({ disabled, handleInputFocus }) => {\n  const { t } = useTranslation();\n\n  return (\n    <BaseButtonsForm.Item\n      name=\"cvc\"\n      label={t('profile.nav.payments.CVV')}\n      rules={[\n        {\n          required: true,\n          message: t('common.requiredField'),\n        },\n      ]}\n    >\n      <MaskedInput placeholder=\"***\" mask=\"000\" name=\"cvc\" onFocus={handleInputFocus} disabled={disabled} />\n    </BaseButtonsForm.Item>\n  );\n};\n","export interface CardTheme {\n  id: number;\n  background: string;\n}\n\nexport const cardThemes: CardTheme[] = [\n  {\n    id: 1,\n    background:\n      'https://res.cloudinary.com/lapkinthegod/image/upload/v1633425628/horizontal-wide-red-pink-blue-blurred-background_136277-125_bk9drb.jpg',\n  },\n  {\n    id: 2,\n    background:\n      'https://res.cloudinary.com/lapkinthegod/image/upload/v1633007324/vivid-blurred-colorful-wallpaper-background_1_h1k9sc.png',\n  },\n  {\n    id: 3,\n    background: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1633007328/43064_1_z6kdji.png',\n  },\n  {\n    id: 4,\n    background:\n      'https://res.cloudinary.com/lapkinthegod/image/upload/v1633007330/abstract-luxury-gradient-blue-background-smooth-dark-blue-with-black-vignette-studio-banner_1_x81z7y.png',\n  },\n  {\n    id: 5,\n    background: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1633102260/Mask_Group_1_cr4x7l.png',\n  },\n  {\n    id: 6,\n    background: 'https://res.cloudinary.com/lapkinthegod/image/upload/v1633102263/Rectangle_917_1_ssqdbc.png',\n  },\n];\n","import { BORDER_RADIUS } from '@app/styles/themes/constants';\nimport styled from 'styled-components';\n\ninterface BackgroundWrapperProps {\n  isActive: boolean;\n  background: string;\n}\n\nexport const BackgroundWrapper = styled.div<BackgroundWrapperProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  width: 3.125rem;\n  height: 3.125rem;\n  margin: 0 auto;\n  transition: all 0.5s ease;\n\n  border-radius: ${BORDER_RADIUS};\n\n  ${(props) => props.isActive && `background: url(${props.background})`};\n  background-size: cover;\n\n  & > div {\n    background: ${(props) => `url(${props.background})`};\n    background-size: cover;\n  }\n\n  &:hover {\n    opacity: 0.7;\n\n    ${(props) => `background: url(${props.background})`};\n    background-size: cover;\n  }\n`;\n\nexport const Theme = styled.div`\n  width: calc(100% - 0.4rem);\n  height: calc(100% - 0.4rem);\n  margin: 0.2rem;\n\n  border: 5px solid var(--background-color);\n\n  border-radius: ${BORDER_RADIUS};\n`;\n","import React, { useCallback, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { CardTheme, cardThemes } from '@app/constants/cardThemes';\nimport { PaymentCard } from '@app/interfaces/interfaces';\nimport * as S from './CardThemeItem.styles';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\n\ninterface CardThemeItemProps {\n  cardData: PaymentCard;\n  setCardData: (state: PaymentCard) => void;\n}\n\nexport const CardThemeItem: React.FC<CardThemeItemProps> = ({ cardData, setCardData }) => {\n  const { t } = useTranslation();\n\n  const handleChange = useCallback(\n    (item: CardTheme) => () => {\n      setCardData({ ...cardData, background: item.background });\n    },\n    [setCardData, cardData],\n  );\n\n  const themes = useMemo(\n    () =>\n      cardThemes.map((item) => (\n        <BaseCol xs={8} md={4} key={item.id}>\n          <S.BackgroundWrapper background={item.background} isActive={cardData.background === item.background}>\n            <S.Theme tabIndex={0} onClick={handleChange(item)} />\n          </S.BackgroundWrapper>\n        </BaseCol>\n      )),\n    [cardData, handleChange],\n  );\n\n  return (\n    <BaseButtonsForm.Item label={t('profile.nav.payments.cardTheme')}>\n      <BaseRow gutter={[10, 10]}>{themes}</BaseRow>\n    </BaseButtonsForm.Item>\n  );\n};\n","import styled from 'styled-components';\nimport { PaymentCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCard/PaymentCard';\n\nexport const PayCard = styled(PaymentCard)`\n  position: absolute;\n  top: -5rem;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nexport const FormItemsWrapper = styled.div`\n  padding-top: 7.5rem;\n`;\n","import React, { useCallback, useState } from 'react';\nimport { BaseButtonsForm } from '@app/components/common/forms/BaseButtonsForm/BaseButtonsForm';\nimport { BaseButtonsGroup } from '@app/components/common/forms/components/BaseButtonsGroup/BaseButtonsGroup';\nimport { CardNumberItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardNumberItem/CardNumberItem';\nimport { CardholderItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardholderItem/CardholderItem';\nimport { ExpDateItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/ExpDateItem/ExpDateItem';\nimport { CVVItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CVVItem/CVVItem';\nimport { CardThemeItem } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/paymentForm/CardThemeItem/CardThemeItem';\nimport { cardThemes } from '@app/constants/cardThemes';\nimport * as S from './PaymentForm.styles';\nimport { PaymentCard } from '@app/interfaces/interfaces';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\nexport const clearCardData: PaymentCard = {\n  name: '',\n  cvc: '',\n  expiry: '',\n  number: '',\n  focused: '',\n  background: cardThemes[0].background,\n  isEdit: false,\n};\n\ninterface PaymentFormProps {\n  closeModal: () => void;\n  onFormFinish: (card: PaymentCard) => void;\n}\n\nexport const PaymentForm: React.FC<PaymentFormProps> = ({ closeModal, onFormFinish }) => {\n  const [cardData, setCardData] = useState<PaymentCard>(clearCardData);\n  const [isLoading, setLoading] = useState(false);\n  const [isFieldsChanged, setFieldsChanged] = useState(false);\n\n  const [form] = BaseForm.useForm();\n\n  const handleInputFocus = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setCardData({\n        ...cardData,\n        focused: event.target.name,\n      });\n    },\n    [setCardData, cardData],\n  );\n\n  const onFinish = useCallback(\n    (values: PaymentCard) => {\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false);\n        setFieldsChanged(false);\n        const card = { ...values, background: cardData.background };\n        onFormFinish(card);\n        setCardData(clearCardData);\n        closeModal();\n        form.setFieldsValue(clearCardData);\n      }, 1000);\n    },\n    [cardData.background, closeModal, form, onFormFinish],\n  );\n\n  return (\n    <BaseButtonsForm\n      form={form}\n      requiredMark=\"optional\"\n      name=\"paymentCard\"\n      onFinish={onFinish}\n      footer={<BaseButtonsGroup loading={isLoading} onCancel={closeModal} />}\n      initialValues={clearCardData}\n      onValuesChange={(field) => {\n        const values = Object.entries(field)[0];\n\n        setCardData({ ...cardData, [values[0]]: values[1] });\n      }}\n      isFieldsChanged={isFieldsChanged}\n      onFieldsChange={() => setFieldsChanged(true)}\n    >\n      <S.PayCard cardData={cardData} />\n      <S.FormItemsWrapper>\n        <CardNumberItem handleInputFocus={handleInputFocus} />\n        <CardholderItem handleInputFocus={handleInputFocus} />\n        <BaseRow gutter={[20, 0]}>\n          <BaseCol span={12}>\n            <ExpDateItem handleInputFocus={handleInputFocus} />\n          </BaseCol>\n          <BaseCol span={12}>\n            <CVVItem handleInputFocus={handleInputFocus} />\n          </BaseCol>\n        </BaseRow>\n        <CardThemeItem cardData={cardData} setCardData={setCardData} />\n      </S.FormItemsWrapper>\n    </BaseButtonsForm>\n  );\n};\n","import React from 'react';\nimport { BaseModal } from '@app/components/common/BaseModal/BaseModal';\nimport { PaymentForm } from '../paymentForm/PaymentForm/PaymentForm';\nimport { PaymentCard } from '@app/interfaces/interfaces';\n\ninterface PaymentModalProps {\n  isModalOpen: boolean;\n  closeModal: () => void;\n  onCardAdd: (card: PaymentCard) => void;\n}\n\nexport const AddNewCardModal: React.FC<PaymentModalProps> = ({ isModalOpen, closeModal, onCardAdd }) => {\n  return (\n    <BaseModal destroyOnClose size=\"small\" open={isModalOpen} onCancel={closeModal} footer={null} closable={false}>\n      <PaymentForm closeModal={closeModal} onFormFinish={onCardAdd} />\n    </BaseModal>\n  );\n};\n","import React, { useState } from 'react';\nimport * as S from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardButton/AddNewCardButton.styles';\nimport { AddNewCardModal } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardModal';\nimport { useTranslation } from 'react-i18next';\nimport { PaymentCard } from '@app/interfaces/interfaces';\n\ninterface AddNewCardButtonProps {\n  onCardAdd: (card: PaymentCard) => void;\n}\nexport const AddNewCardButton: React.FC<AddNewCardButtonProps> = ({ onCardAdd }) => {\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => setModalOpen(false);\n\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <S.AddBtn type=\"ghost\" onClick={openModal}>\n        {t('profile.nav.payments.addNewCard')}\n      </S.AddBtn>\n      <AddNewCardModal isModalOpen={isModalOpen} closeModal={closeModal} onCardAdd={onCardAdd} />\n    </>\n  );\n};\n","import React from 'react';\nimport { PaymentCard as IPaymentCard } from '@app/interfaces/interfaces';\nimport { PaymentCard } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCard/PaymentCard';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { ActionButtons } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/ActionButtons/ActionButtons';\nimport { AddNewCardButton } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/addNewCard/AddNewCardButton/AddNewCardButton';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\ninterface PaymentCardsWidgetProps {\n  cards: IPaymentCard[];\n  onCardRemove: (cardNumber: string) => void;\n  onCardAdd: (card: IPaymentCard) => void;\n}\n\nexport const PaymentCardsWidget: React.FC<PaymentCardsWidgetProps> = ({ cards, onCardRemove, onCardAdd }) => {\n  const { useMediaQuery } = useResponsive();\n\n  const breakpoint = 659.98; // calculated manually according to default card size (290px) and other factors\n  const isBreakpoint = useMediaQuery({ query: `(min-width: ${breakpoint}px)` });\n\n  const justify = isBreakpoint ? 'start' : 'space-around';\n\n  return (\n    <BaseRow justify={justify} gutter={[16, 16]}>\n      {cards.map((card) => (\n        <BaseCol key={card.number}>\n          <PaymentCard cardData={card}>\n            <ActionButtons onRemove={() => onCardRemove(card.number)} />\n          </PaymentCard>\n        </BaseCol>\n      ))}\n      <BaseCol>\n        <AddNewCardButton onCardAdd={onCardAdd} />\n      </BaseCol>\n    </BaseRow>\n  );\n};\n","import { cardThemes } from '@app/constants/cardThemes';\nimport { PaymentCard } from '@app/interfaces/interfaces';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const getPaymentCards = (_id: string): Promise<PaymentCard[]> =>\n  new Promise((res) =>\n    setTimeout(\n      () =>\n        res([\n          {\n            name: 'Dean James',\n            cvc: '144',\n            expiry: '11/24',\n            number: '4255 2003 0168 9006',\n            focused: '',\n            background: cardThemes[0].background,\n            isEdit: false,\n          },\n          {\n            name: 'Walker Alan',\n            cvc: '179',\n            expiry: '05/23',\n            number: '5245 0017 2000 0164',\n            focused: '',\n            background: cardThemes[3].background,\n            isEdit: false,\n          },\n          {\n            name: 'Jackson Michael',\n            cvc: '345',\n            expiry: '12/22',\n            number: '4255 1000 2046 8006',\n            focused: '',\n            background: cardThemes[5].background,\n            isEdit: false,\n          },\n          {\n            name: 'Christopher Johnson',\n            cvc: '222',\n            expiry: '09/24',\n            number: '5205 0024 2535 5235',\n            focused: '',\n            background: cardThemes[4].background,\n            isEdit: false,\n          },\n        ]),\n      1500,\n    ),\n  );\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { BaseForm } from '@app/components/common/forms/BaseForm/BaseForm';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { PaymentCardsWidget } from '@app/components/profile/profileCard/profileFormNav/nav/payments/paymentMethod/PaymentCardsWidget';\nimport { useResponsive } from '@app/hooks/useResponsive';\nimport { BaseSpin } from '@app/components/common/BaseSpin/BaseSpin';\nimport { PaymentCard } from '@app/interfaces/interfaces';\nimport { useAppSelector } from '@app/hooks/reduxHooks';\nimport { getPaymentCards } from '@app/api/paymentCards.api';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\nexport const PaymentMethod: React.FC = () => {\n  const { t } = useTranslation();\n\n  const [cards, setCards] = useState<PaymentCard[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const _id = useAppSelector((state) => state.user?.user?._id);\n\n  useEffect(() => {\n    if (_id) {\n      setLoading(true);\n      getPaymentCards(_id)\n        .then((res) => setCards(res))\n        .finally(() => setLoading(false));\n    }\n  }, [_id]);\n\n  const { isTablet } = useResponsive();\n\n  const handleCardRemove = (cardNumber: string) => setCards(cards.filter((card) => card.number !== cardNumber));\n\n  const handleCardAdd = (card: PaymentCard) => {\n    setCards([...cards, card]);\n  };\n\n  const content = (\n    <BaseRow gutter={[32, 32]}>\n      <BaseCol span={24}>\n        <BaseForm.Title>{t('profile.nav.payments.paymentMethod')}</BaseForm.Title>\n      </BaseCol>\n      <BaseCol span={24}>\n        <BaseSpin spinning={loading}>\n          <PaymentCardsWidget cards={cards} onCardRemove={handleCardRemove} onCardAdd={handleCardAdd} />\n        </BaseSpin>\n      </BaseCol>\n    </BaseRow>\n  );\n\n  return isTablet ? content : <BaseCard>{content}</BaseCard>;\n};\n","import React, { useMemo } from 'react';\nimport { PaymentHistory } from './paymentHistory/PaymentHistory/PaymentHistory';\nimport { PaymentMethod } from './paymentMethod/PaymentMethod';\nimport { BaseCard } from '@app/components/common/BaseCard/BaseCard';\nimport { useResponsive } from 'hooks/useResponsive';\nimport { BaseRow } from '@app/components/common/BaseRow/BaseRow';\nimport { BaseCol } from '@app/components/common/BaseCol/BaseCol';\n\nexport const Payments: React.FC = () => {\n  const { isTablet } = useResponsive();\n\n  const content = useMemo(\n    () => (\n      <BaseRow gutter={[0, 30]}>\n        <BaseCol span={24}>\n          <PaymentMethod />\n        </BaseCol>\n        <BaseCol span={24}>\n          <PaymentHistory />\n        </BaseCol>\n      </BaseRow>\n    ),\n    [],\n  );\n\n  return isTablet ? <BaseCard>{content}</BaseCard> : content;\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { PageTitle } from '@app/components/common/PageTitle/PageTitle';\nimport { Payments } from '@app/components/profile/profileCard/profileFormNav/nav/payments/Payments';\n\nconst PaymentsPage: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PageTitle>{t('profile.nav.payments.title')}</PageTitle>\n      <Payments />\n    </>\n  );\n};\n\nexport default PaymentsPage;\n"],"sourceRoot":""}